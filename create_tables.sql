CREATE TABLE menu(
	ID INTEGER PRIMARY KEY,
	name_of_dish VARCHAR(100) NOT NULL,
	description VARCHAR(500) NULL
	price INTEGER NOT NULL,
	category VARCHAR(75) NOT NULL
)


CREATE TABLE personal(
	ID INTEGER PRIMARY KEY,
	name VARCHAR(75) NOT NULL,
	lastname VARCHAR(50) NOT NULL,
	login VARCHAR(100) NOT NULL,
	password VARCHAR(50) NOT NULL,
	position VARCHAR(75) NOT NULL,
	date DATETIME NOT NULL,
	adress VARCHAR(200) NOT NULL,
	email VARCHAR(75) NULL
)


CREATE TABLE clients(
	ID INTEGER PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	full_name VARCHAR(100) NOT NULL,
	login VARCHAR(100) NOT NULL,
	password VARCHAR(50) NOT NULL,
	adress VARCHAR(100) NOT NULL,
	email VARCHAR(100) NULL,
	mobile_phone INTEGER NOT NULL,
)


CREATE TABLE tables(
	ID INTEGER PRIMARY KEY,
	table_number INTEGER NOT NULL,
	number_of_seats INTEGER NOT NULL,
	status VARCHAR(20) NOT NULL
)


CREATE TABLE expenses(
	ID INTEGER PRIMARY KEY,
	name_expences VARCHAR(100) NOT NULL,
	amount INTEGER NOT NULL,
	date DATE NOT NULL,
	description VARCHAR(100) NULL,
	category VARCHAR(75) NOT NULL	
)	


CREATE TABLE suppliers(
	ID INTEGER PRIMARY KEY,
	name_company VARCHAR(100) NOT NULL,
	contact_person VARCHAR(100) NOT NULL,
	mobile_phone INTEGER NOT NULL,
	email VARCHAR(75) NULL
)


CREATE TABLE reviews (
	ID INTEGER PRIMARY KEY,
	FOREIGN KEY (ID_clients) REFERENCES clients(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
	text_rewiew VARCHAR(250) NOT NULL,
	grade VARCHAR(100) NOT NULL
)
	

CREATE TABLE orders (
	ID INTEGER PRIMARY KEY,
	FOREIGN KEY (ID_clients) REFERENCES clients(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
	date_time DATETIME NOT NULL,
	amount_orders INTEGER NOT NULL,
	status VARCHAR(25) NOT NULL	
)


CREATE TABLE order_meals(
	ID INTEGER PRIMARY KEY,
	FOREIGN KEY (ID_order) REFERENCES orders(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
	FOREIGN KEY (ID_dishes) REFERENCES menu(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
	count INTEGER NOT NULL
)


CREATE TABLE orders_from_suppliers(
	ID INTEGER PRIMARY KEY,
	FOREIGN KEY (ID_suppliers) REFERENCES suppliers(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
	date DATE NOT NULL,
	amount_order INTEGER NOT NULL,
	status VARCHAR
);


